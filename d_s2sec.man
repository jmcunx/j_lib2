.\" 
.\" Copyright (c) 1999 2001 2002 ... 2017 2018 
.\"     John McCue <jmccue@jmcunx.com>
.\" 
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.TH j2_str_to_secs 3 "2018/08/22" "JMC" "Local Library Function"
.SH NAME
j2_str_to_secs() - Converts a "run time" string to Seconds
.SH SYNOPSIS
.nf
#include <time.h>
#include <sys/types.h>
#include <j_lib2.h>
.fi

long int j2_str_to_secs(char *run_time);
.SH DESCRIPTION
j2_str_to_secs() - Converts a time string formatted as "DDD hh:mm:ss"
to seconds.  strtok() is not
used because this string could be used (created) via strtok().
So we MUST assume there is *one* space separating Days from Time
.SH EXAMPLE
Convert to secs and back to string
.nf

{
  char ds[30];
  time_t secs;

  strcpy(ds,"002 03:05:00");

  secs = j2_str_to_secs(ds);
  fprintf(stdout,"%s is %ld\\n", ds, secs);

  j2_secs_to_str(ds, secs);
  fprintf(stdout,"%ld is %s\\n", secs, ds);

}
.fi
.SH DIAGNOSTICS
Run Time format is fixed at "DDD hh:mm:ss".
There can only be one space between DDD and hh.
Also DDD can be larger than 999,
but the effective limit is "24855 03:14:07" on most 32 bit systems.
.PP
Note, the "effective limit" on recent 32 bit NetBSD and OpenBSD Systems
is the same as 64 bit systems.
.SH
RETURN VALUES
Number of seconds.
