.\"
.\" Copyright (c) 1994 1995 1996 ... 2022 2023
.\"     John McCue <jmccue@jmcunx.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.TH J2_DATE_DS_SPLIT 3 "2021-02-03" "JMC" "Local Library Function"
.SH NAME
.nf
j2_ds_split() - Splits a date string into it's components
j2_dl_split() - Splits a date integer into it's components
.fi
.SH SYNOPSIS
#include <j_lib.h>
.nf

int j2_ds_split(date_time_split_def *d, char *date_time, int fmt);
int j2_dl_split(date_time_split_def *d, long date_time, int fmt);
.fi
.SH DESCRIPTION
j2_ds_split(), j2_dl_split() - Splits a date into it's components.
Updating structure date_time_split_def.

Following arguments are used by j2_ds_split():
.nf
    date_time_split_def *d   Pointer to results structure
    char *date_time          Date/Time String to be split up
    int fmt                  Format type.  Used to determine
                             Date Format.  Can have one of the
                             following values:
                                 Value         Meaning
                                 ------------- ----------
                                 DATE_IN_FMT_U  US Format
                                 DATE_IN_FMT_E  European Format
                                 DATE_IN_FMT_J  Japan Format
.fi

Following arguments are used by j2_dl_split():
.nf
    date_time_split_def *d   Pointer to results structure
    long date_time           Date/Time Long Integer to be split up
    int fmt                  Format type.  Used to determine
                             Date Format.  Can have one of the
                             following values:
                                 DATE_IN_FMT_U  US Format
                                 DATE_IN_FMT_E  European Format
                                 DATE_IN_FMT_J  Japan Format
.fi

Listed below is a list of various formats which is can be processed
by j2_ds_split():
.nf
    "YYMMDD"
    "YYYYMMDD"
    "YYMMDDhhmmss"
    "YYYYMMDDhhmmss"
    "YYMMDDhhmmsslll"
    "YYYYMMDDhhmmsslll"
    "MM/DD/YY"
    "MM/DD/YYYY"
    "MM/DD/YY hh:mm:ss"
    "MM/DD/YYYY hh:mm:ss"
    "MM/DD/YY hh:mm:ss.lll"
    "MM/DD/YYYY hh:mm:ss.lll"
    "DD/MM/YY"
    "DD/MM/YYYY"
    "DD/MM/YY hh:mm:ss"
    "DD/MM/YYYY hh:mm:ss"
    "DD/MM/YY hh:mm:ss.lll"
    "DD/MM/YYYY hh:mm:ss.lll"
    "YY/MM/DD"
    "YYYY/MM/DD"
    "YY/MM/DD hh:mm:ss"
    "YYYY/MM/DD hh:mm:ss"
    "YY/MM/DD hh:mm:ss.lll"
    "YYYY/MM/DD hh:mm:ss.lll"
    "YYMMDD hh:mm:ss.lll"
    "YYYYMMDD hh:mm:ss.lll"
.fi

Listed below is a list of various formats which is can be processed
by j2_dl_split():
.nf
    "YYMMDD"
    "YYYYMMDD"
    "YYMMDDhhmmss"
    "YYYYMMDDhhmmss"
    "YYMMDDhhmmsslll"
    "YYYYMMDDhhmmsslll"
.fi
The following formats are NOT yet supported:
.nf
    "NNN D YYYY hh:mmxx"
    "NNN DD YYYY hh:mmxx"
    "ddd NNN DD hh:mm:SS YYYY"
    "NNN DD YYYY hh:mm:ss.lllxx"
    "NNN DD YYYY hh:mm:ss:lllxx"
.fi
Symbol Legend:
.nf
    YY     2 digit year
    YYYY   4 digit year
    MM     2 digit month, 01 -- 12
    DD     2 digit day, 01 -- 31
    D      1 digit day, 1 -- 9
    hh     Hours, 0 -- 23
    mm     Minutes, 0 -- 59
    ss     Seconds, 0 -- 59
    lll    milli-Seconds, 0 -- 999
    NNN    3 character Month Name ie: JAN FEB MAR APR MAY JUN
                                      JUL AUG SEP OCT NOV DEC
    ddd    3 character Day Name   ie: MON TUE WED THU FRI SAT SUN
.fi

.PP
This is the format of structure date_time_split_def:
.nf
    typedef struct
    {
      int month;   /* Month,           01 --12             */
      int dd;      /* Day of Month,    01 -- [28/29/30/31] */
      int yy;      /* two digit year,  00 -- 99            */
      int yyyy;    /* four digit year, 0000 -- 9999        */
      int hh;      /* Hour of the day, 00 -- 23            */
      int minutes; /* minutes,         00 -- 59            */
      int ss;      /* seconds,         00 -- 59            */
      int mil;     /* milliseconds,    000 -- 999          */
    } date_time_split_def;
.fi
.SH EXAMPLE
split up various date strings
.nf

{
  char ds[30];
  long di;
  date_time_split_def dt;

  strcpy(ds,"09/08/99 03:05:00");
  if ( j2_ds_split(&dt, ds, DATE_IN_FMT_U) )
    printf("Date Split SUCCESS\\n");
  else
    printf("Date Split ABORTED\\n");

  di = 19991116L;
  if ( j2_dl_split(&dt, di, DATE_IN_FMT_U) )
    printf("Date Split SUCCESS\\n");
  else
    printf("Date Split ABORTED\\n");

  di = 19991301L;
  if ( j2_dl_split(&dt, di, DATE_IN_FMT_U) )
    printf("Date Split SUCCESS\\n");
  else
    printf("Date Split ABORTED\\n");
}
.fi
.SH DIAGNOSTICS
For some date formats, this routine needs a hint
on the format, this is provided by argument "fmt".
.SH RETURN VALUES
TRUE for success, FALSE for Failure
