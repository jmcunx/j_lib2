.\"
.\" Copyright (c) 2022 2023
.\"     John McCue <jmccue@jmcunx.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.TH J2_MSLEEP 3 "2022-12-18" "JMC" "Local Library Function"
.SH NAME
j2_sleepm() - Sleep for Milliseconds
.SH SYNOPSIS
.nf
#include <stdio.h>
#include <j_lib2.h>

void j2_sleepm(long int ms);
.fi
.SH DESCRIPTION
j2_sleepm() - Sleeps for the specified milliseconds.
.SH EXAMPLE
Sleep for 2 seconds, 3 milliseconds then sleep
for 50 milliseconds:
.nf

{
  j2_sleepm(2003L);  /* 2 seconds, 3 milliseconds */
  j2_msleep(50L);    /* 0 seconds 50 milliseconds */
}
.fi
.SH DIAGNOSTICS
This is useful to avoid differences between
various Operating Systems.
.PP
Right now only UN*X type systems are supported.
.SH RETURNS
nothing
.SH SEE-ALSO
ftime(3),
gettimeofday(2),
j2_today(3),
j_lib(3),
localtime(3),
nanosleep(2),
signal(2),
signal(7),
sleep(1),
sleep(3)
